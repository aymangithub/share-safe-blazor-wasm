@inject IStringLocalizer<LanguageSelector> L

<MudTooltip Text="@CurrentLanguage">
    @if (ShowButtonList)
    {

        <MudGrid>

            @foreach (var language in LocalizationConstants.TargetLanguages)
            {
                <MudItem xs="6">
                    <MudButton Variant="Variant.Outlined" Color="language.Code == CurrentLanguage ? Color.Primary : Color.Default"
                               Disabled="language.Code == CurrentLanguage" @onclick="() => ChangeLanguageAsync(language.Code)">
                        @L[language.DisplayName]
                    </MudButton>
                </MudItem>

            }
        </MudGrid>
    }
    else
    {

        <MudMenu Icon="@Icons.Material.Outlined.Translate" Color="Color.Inherit" Direction="Direction.Bottom" OffsetY="true"
                 Dense="true">
            @foreach (var language in LocalizationConstants.TargetLanguages)
            {
                if (language.Code == CurrentLanguage)
                {
                    <MudMenuItem style="background:var(--mud-palette-primary); color:white">@L[language.DisplayName]</MudMenuItem>
                }
                else
                {
                    <MudMenuItem OnClick="(()=> ChangeLanguageAsync(language.Code))">@L[language.DisplayName]</MudMenuItem>
                }
            }
        </MudMenu>

    }



</MudTooltip>

@code {
    [Parameter]
    public bool ShowButtonList { get; set; }
    public string? CurrentLanguage { get; set; } = "en-US";

    protected override async Task OnInitializedAsync()
    {
        var currentPreference = await ClientPreferences.GetPreference() as ClientPreference;
        if (currentPreference != null)
        {
            CurrentLanguage = currentPreference.LanguageCode;
        }
        else
        {
            CurrentLanguage = "en-US";
        }

    }
    private async Task ChangeLanguageAsync(string languageCode)
    {
        var result = await ClientPreferences.ChangeLanguageAsync(languageCode);
        Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
    }
}